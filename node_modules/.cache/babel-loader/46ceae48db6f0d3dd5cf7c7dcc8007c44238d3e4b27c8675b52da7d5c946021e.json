{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return resolveRewrites;\n  }\n});\nconst _pathmatch = require(\"./path-match\");\nconst _preparedestination = require(\"./prepare-destination\");\nconst _removetrailingslash = require(\"./remove-trailing-slash\");\nconst _normalizelocalepath = require(\"../../i18n/normalize-locale-path\");\nconst _removebasepath = require(\"../../../../client/remove-base-path\");\nconst _parserelativeurl = require(\"./parse-relative-url\");\nfunction resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {\n  let matchedPage = false;\n  let externalDest = false;\n  let parsedAs = (0, _parserelativeurl.parseRelativeUrl)(asPath);\n  let fsPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(parsedAs.pathname), locales).pathname);\n  let resolvedHref;\n  const handleRewrite = rewrite => {\n    const matcher = (0, _pathmatch.getPathMatch)(rewrite.source + (process.env.__NEXT_TRAILING_SLASH ? \"(/)?\" : \"\"), {\n      removeUnnamedParams: true,\n      strict: true\n    });\n    let params = matcher(parsedAs.pathname);\n    if ((rewrite.has || rewrite.missing) && params) {\n      const hasParams = (0, _preparedestination.matchHas)({\n        headers: {\n          host: document.location.hostname,\n          \"user-agent\": navigator.userAgent\n        },\n        cookies: document.cookie.split(\"; \").reduce((acc, item) => {\n          const [key, ...value] = item.split(\"=\");\n          acc[key] = value.join(\"=\");\n          return acc;\n        }, {})\n      }, parsedAs.query, rewrite.has, rewrite.missing);\n      if (hasParams) {\n        Object.assign(params, hasParams);\n      } else {\n        params = false;\n      }\n    }\n    if (params) {\n      if (!rewrite.destination) {\n        // this is a proxied rewrite which isn't handled on the client\n        externalDest = true;\n        return true;\n      }\n      const destRes = (0, _preparedestination.prepareDestination)({\n        appendParamsToQuery: true,\n        destination: rewrite.destination,\n        params: params,\n        query: query\n      });\n      parsedAs = destRes.parsedDestination;\n      asPath = destRes.newUrl;\n      Object.assign(query, destRes.parsedDestination.query);\n      fsPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(asPath), locales).pathname);\n      if (pages.includes(fsPathname)) {\n        // check if we now match a page as this means we are done\n        // resolving the rewrites\n        matchedPage = true;\n        resolvedHref = fsPathname;\n        return true;\n      }\n      // check if we match a dynamic-route, if so we break the rewrites chain\n      resolvedHref = resolveHref(fsPathname);\n      if (resolvedHref !== asPath && pages.includes(resolvedHref)) {\n        matchedPage = true;\n        return true;\n      }\n    }\n  };\n  let finished = false;\n  for (let i = 0; i < rewrites.beforeFiles.length; i++) {\n    // we don't end after match in beforeFiles to allow\n    // continuing through all beforeFiles rewrites\n    handleRewrite(rewrites.beforeFiles[i]);\n  }\n  matchedPage = pages.includes(fsPathname);\n  if (!matchedPage) {\n    if (!finished) {\n      for (let i = 0; i < rewrites.afterFiles.length; i++) {\n        if (handleRewrite(rewrites.afterFiles[i])) {\n          finished = true;\n          break;\n        }\n      }\n    }\n    // check dynamic route before processing fallback rewrites\n    if (!finished) {\n      resolvedHref = resolveHref(fsPathname);\n      matchedPage = pages.includes(resolvedHref);\n      finished = matchedPage;\n    }\n    if (!finished) {\n      for (let i = 0; i < rewrites.fallback.length; i++) {\n        if (handleRewrite(rewrites.fallback[i])) {\n          finished = true;\n          break;\n        }\n      }\n    }\n  }\n  return {\n    asPath,\n    parsedAs,\n    matchedPage,\n    resolvedHref,\n    externalDest\n  };\n}","map":{"version":3,"names":["resolveRewrites","asPath","pages","rewrites","query","resolveHref","locales","matchedPage","externalDest","parsedAs","_parserelativeurl","parseRelativeUrl","fsPathname","_removetrailingslash","removeTrailingSlash","_normalizelocalepath","normalizeLocalePath","_removebasepath","removeBasePath","pathname","resolvedHref","handleRewrite","rewrite","matcher","_pathmatch","getPathMatch","source","process","env","__NEXT_TRAILING_SLASH","removeUnnamedParams","strict","params","has","missing","hasParams","_preparedestination","matchHas","headers","host","document","location","hostname","navigator","userAgent","cookies","cookie","split","reduce","acc","item","key","value","join","Object","assign","destination","destRes","prepareDestination","appendParamsToQuery","parsedDestination","newUrl","includes","finished","i","beforeFiles","length","afterFiles","fallback"],"sources":["../../../../../src/shared/lib/router/utils/resolve-rewrites.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}