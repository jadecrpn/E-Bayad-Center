{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\e-billing\\\\src\\\\components\\\\BillingOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BillingOperations = () => {\n  _s();\n  const history = useNavigate();\n  const [selectedOption, setSelectedOption] = useState(null);\n  // State to manage the selected option\n\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    // Perform the desired action based on the selected option\n    // For now, let's navigate to a new page\n    history.push(`/result/${option}`);\n  };\n  const options = ['Option 1', 'Option 2', 'Option 3'\n  // Add more options as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Choose your method:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: e => handleOptionSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Choose an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected option: \", selectedOption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(BillingOperations, \"PzFABLhmt/WHmeB0DykQbTYhYYc=\", false, function () {\n  return [useNavigate];\n});\n_c = BillingOperations;\nexport default BillingOperations;\nvar _c;\n$RefreshReg$(_c, \"BillingOperations\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","BillingOperations","_s","history","selectedOption","setSelectedOption","handleOptionSelect","option","push","options","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","map","index","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/e-billing/src/components/BillingOperations.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BillingOperations = () => {\r\n  const history = useNavigate();\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  // State to manage the selected option\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n    // Perform the desired action based on the selected option\r\n    // For now, let's navigate to a new page\r\n    history.push(`/result/${option}`);\r\n  };\r\n  \r\n  const options = [\r\n    'Option 1',\r\n    'Option 2',\r\n    'Option 3',\r\n    // Add more options as needed\r\n  ];\r\n  return (\r\n    <div>\r\n      <label>Choose your method:</label>\r\n      <select\r\n        value={selectedOption}\r\n        onChange={(e) => handleOptionSelect(e.target.value)}\r\n      >\r\n        <option value=\"\" disabled>\r\n          Choose an option\r\n        </option>\r\n        {options.map((option, index) => (\r\n          <option key={index} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <p>Selected option: {selectedOption}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default BillingOperations;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,OAAO,GAAGL,WAAW,CAAC,CAAC;EAC7B,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D;;EAEA,MAAMS,kBAAkB,GAAIC,MAAM,IAAK;IACrCF,iBAAiB,CAACE,MAAM,CAAC;IACzB;IACA;IACAJ,OAAO,CAACK,IAAI,CAAE,WAAUD,MAAO,EAAC,CAAC;EACnC,CAAC;EAED,MAAME,OAAO,GAAG,CACd,UAAU,EACV,UAAU,EACV;EACA;EAAA,CACD;EACD,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAO;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClCd,OAAA;MACEe,KAAK,EAAEX,cAAe;MACtBY,QAAQ,EAAGC,CAAC,IAAKX,kBAAkB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAEpDV,OAAA;QAAQe,KAAK,EAAC,EAAE;QAACI,QAAQ;QAAAT,QAAA,EAAC;MAE1B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRL,OAAO,CAACW,GAAG,CAAC,CAACb,MAAM,EAAEc,KAAK,kBACzBrB,OAAA;QAAoBe,KAAK,EAAER,MAAO;QAAAG,QAAA,EAC/BH;MAAM,GADIc,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETd,OAAA;MAAAU,QAAA,GAAG,mBAAiB,EAACN,cAAc;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtCID,iBAAiB;EAAA,QACLH,WAAW;AAAA;AAAAwB,EAAA,GADvBrB,iBAAiB;AAyCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}