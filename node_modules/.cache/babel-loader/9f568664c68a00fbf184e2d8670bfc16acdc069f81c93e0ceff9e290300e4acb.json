{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Toaster, toast } from 'sonner';\nexport const useUser = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    setError,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSignUp = data => {\n    console.log(data);\n    // Check if passwords match\n    if (data.password !== data.confirmPassword) {\n      setError('confirmPassword', {\n        message: 'Passwords do not match'\n      });\n      return;\n    }\n    let accounts = localStorage.getItem('accounts');\n    if (!accounts) {\n      accounts = [];\n    } else {\n      accounts = JSON.parse(accounts);\n      for (let i = 0; i < accounts.length; i++) {\n        if (accounts[i].email === data.email) {\n          setErrorMessage('Email already registered.');\n          return;\n        }\n      }\n    }\n    accounts.push(data);\n    localStorage.setItem('accounts', JSON.stringify(accounts));\n    toast.success('Account successfully registered!');\n    reset();\n    setErrorMessage('');\n  };\n  const handleSignIn = data => {\n    let accounts = localStorage.getItem('accounts');\n    if (accounts) {\n      accounts = JSON.parse(accounts);\n      for (let i = 0; i < accounts.length; i++) {\n        if (data.email === accounts[i].email && data.password === accounts[i].password) {\n          console.log('Successfully logged-in!');\n          toast.success('Successfully logged-in!');\n          setIsLoggedIn(true);\n          setErrorMessage('');\n          reset();\n          return;\n        } else {\n          setErrorMessage('Invalid email or password. Please try again.');\n          return;\n        }\n      }\n    }\n    setErrorMessage('Account not found. Please sign up.');\n  };\n  const handleSignOut = () => {\n    setIsLoggedIn(false);\n  };\n  return {\n    isLoggedIn,\n    errorMessage,\n    handleSignUp: handleSubmit(handleSignUp),\n    handleSignIn: handleSubmit(handleSignIn),\n    handleSignOut,\n    register,\n    watch,\n    errors\n  };\n};\n_s(useUser, \"1UZsnM4MPMbx6AwEMarb/QDqbt4=\", false, function () {\n  return [useForm];\n});\nexport default Login;","map":{"version":3,"names":["useState","useForm","Toaster","toast","useUser","_s","register","handleSubmit","reset","watch","setError","formState","errors","isLoggedIn","setIsLoggedIn","errorMessage","setErrorMessage","handleSignUp","data","console","log","password","confirmPassword","message","accounts","localStorage","getItem","JSON","parse","i","length","email","push","setItem","stringify","success","handleSignIn","handleSignOut","Login"],"sources":["C:/Users/User/Documents/GitHub/e-billing/src/hooks/useUser.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Toaster, toast } from 'sonner'\r\n\r\nexport const useUser = () => {\r\n    const { register, handleSubmit, reset, watch, setError, formState: { errors } } = useForm();\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleSignUp = (data) => {\r\n        console.log(data);\r\n        // Check if passwords match\r\n        if (data.password !== data.confirmPassword) {\r\n            setError('confirmPassword', { message: 'Passwords do not match' });\r\n            return;\r\n        }\r\n\r\n        let accounts = localStorage.getItem('accounts');\r\n\r\n        if (!accounts) {\r\n            accounts = [];\r\n        } else {\r\n            accounts = JSON.parse(accounts);\r\n\r\n            for (let i = 0; i < accounts.length; i++) {\r\n                if (accounts[i].email === data.email) {\r\n                    setErrorMessage('Email already registered.');\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        accounts.push(data);\r\n\r\n        localStorage.setItem('accounts', JSON.stringify(accounts));\r\n        toast.success('Account successfully registered!')\r\n        reset();\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const handleSignIn = (data) => {\r\n        let accounts = localStorage.getItem('accounts');\r\n\r\n        if (accounts) {\r\n            accounts = JSON.parse(accounts);\r\n\r\n            for (let i = 0; i < accounts.length; i++) {\r\n                if (data.email === accounts[i].email && data.password === accounts[i].password) {\r\n                    console.log('Successfully logged-in!')\r\n                    toast.success('Successfully logged-in!')\r\n                    setIsLoggedIn(true);\r\n                    setErrorMessage('');\r\n                    reset();\r\n                    return;\r\n                } else {\r\n                    setErrorMessage('Invalid email or password. Please try again.');\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        setErrorMessage('Account not found. Please sign up.');\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        setIsLoggedIn(false);\r\n    };\r\n\r\n    return {\r\n        isLoggedIn,\r\n        errorMessage,\r\n        handleSignUp: handleSubmit(handleSignUp),\r\n        handleSignIn: handleSubmit(handleSignIn),\r\n        handleSignOut,\r\n        register,\r\n        watch,\r\n        errors,\r\n    };\r\n};\r\n\r\nexport default Login;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,OAAO,EAAEC,KAAK,QAAQ,QAAQ;AAEvC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC3F,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMiB,YAAY,GAAIC,IAAI,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;IACA,IAAIA,IAAI,CAACG,QAAQ,KAAKH,IAAI,CAACI,eAAe,EAAE;MACxCZ,QAAQ,CAAC,iBAAiB,EAAE;QAAEa,OAAO,EAAE;MAAyB,CAAC,CAAC;MAClE;IACJ;IAEA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE/C,IAAI,CAACF,QAAQ,EAAE;MACXA,QAAQ,GAAG,EAAE;IACjB,CAAC,MAAM;MACHA,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;MAE/B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIL,QAAQ,CAACK,CAAC,CAAC,CAACE,KAAK,KAAKb,IAAI,CAACa,KAAK,EAAE;UAClCf,eAAe,CAAC,2BAA2B,CAAC;UAC5C;QACJ;MACJ;IACJ;IACAQ,QAAQ,CAACQ,IAAI,CAACd,IAAI,CAAC;IAEnBO,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEN,IAAI,CAACO,SAAS,CAACV,QAAQ,CAAC,CAAC;IAC1DrB,KAAK,CAACgC,OAAO,CAAC,kCAAkC,CAAC;IACjD3B,KAAK,CAAC,CAAC;IACPQ,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAMoB,YAAY,GAAIlB,IAAI,IAAK;IAC3B,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE/C,IAAIF,QAAQ,EAAE;MACVA,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;MAE/B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIX,IAAI,CAACa,KAAK,KAAKP,QAAQ,CAACK,CAAC,CAAC,CAACE,KAAK,IAAIb,IAAI,CAACG,QAAQ,KAAKG,QAAQ,CAACK,CAAC,CAAC,CAACR,QAAQ,EAAE;UAC5EF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;UACtCjB,KAAK,CAACgC,OAAO,CAAC,yBAAyB,CAAC;UACxCrB,aAAa,CAAC,IAAI,CAAC;UACnBE,eAAe,CAAC,EAAE,CAAC;UACnBR,KAAK,CAAC,CAAC;UACP;QACJ,CAAC,MAAM;UACHQ,eAAe,CAAC,8CAA8C,CAAC;UAC/D;QACJ;MACJ;IACJ;IAEAA,eAAe,CAAC,oCAAoC,CAAC;EACzD,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IACxBvB,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,OAAO;IACHD,UAAU;IACVE,YAAY;IACZE,YAAY,EAAEV,YAAY,CAACU,YAAY,CAAC;IACxCmB,YAAY,EAAE7B,YAAY,CAAC6B,YAAY,CAAC;IACxCC,aAAa;IACb/B,QAAQ;IACRG,KAAK;IACLG;EACJ,CAAC;AACL,CAAC;AAACP,EAAA,CAzEWD,OAAO;EAAA,QACkEH,OAAO;AAAA;AA0E7F,eAAeqC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}