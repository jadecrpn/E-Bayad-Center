{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GWYNN CUJARDO\\\\Documents\\\\GitHub\\\\e-billing\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const buttonStyle = {\n    backgroundColor: '#be800d',\n    color: '#000000',\n    border: '1px solid rgb(0, 0, 0)',\n    padding: '10px 20px',\n    textDecoration: 'none',\n    borderRadius: '50px',\n    cursor: 'pointer',\n    display: 'block',\n    margin: '0 auto' // Center the button horizontally\n  };\n\n  // State variables to store form data\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n\n  // Event handler to update form data on input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Event handler for form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add your registration logic here, e.g., send data to a server\n    console.log('Form submitted:', formData);\n    // Clear form fields after submission\n    setFormData({\n      username: '',\n      password: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"Registerform\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      href: \"/register\",\n      style: buttonStyle,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"vAMF9lWixCuQ4tJ10M7Sg/2f9eE=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterForm","_s","buttonStyle","backgroundColor","color","border","padding","textDecoration","borderRadius","cursor","display","margin","formData","setFormData","username","password","handleInputChange","e","name","value","target","prevData","handleSubmit","preventDefault","console","log","className","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","href","style","_c","$RefreshReg$"],"sources":["C:/Users/GWYNN CUJARDO/Documents/GitHub/e-billing/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst RegisterForm = () => {\r\n  const buttonStyle = {\r\n    backgroundColor: '#be800d',\r\n    color: '#000000',\r\n    border: '1px solid rgb(0, 0, 0)',\r\n    padding: '10px 20px',\r\n    textDecoration: 'none',\r\n    borderRadius: '50px',\r\n    cursor: 'pointer',\r\n    display: 'block',\r\n    margin: '0 auto', // Center the button horizontally\r\n  };\r\n\r\n  \r\n  // State variables to store form data\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  // Event handler to update form data on input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Event handler for form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add your registration logic here, e.g., send data to a server\r\n    console.log('Form submitted:', formData);\r\n    // Clear form fields after submission\r\n    setFormData({\r\n      username: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className = \"Registerform\" onSubmit={handleSubmit}>\r\n      <label>\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <br />\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" href=\"/register\" style={buttonStyle} >Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}